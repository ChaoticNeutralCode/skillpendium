{"version":3,"sources":["serviceWorker.js","muiTheme.js","components/Skill/Skill.js","components/Skill/SkillStyles.js","AppStyles.js","components/CategoryButton/CategoryButton.js","components/CategoryButton/CategoryButtonStyles.js","components/Search/Search.js","components/Logo/LogoImage.js","components/Logo/Logo.js","components/Logo/LogoStyles.js","actions.js","pages/Home.js","App.js","reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","SkillpendiumTheme","createMuiTheme","palette","withStyles","theme","permalink","verticalAlign","color","padding","skillActions","flex","description","marginTop","lineHeight","letterSpacing","display","skill","categories","classes","className","onSelect","userCollections","onToggleCollection","categoriesString","map","s","join","Card","variant","CardContent","Grid","container","item","Typography","component","name","IconButton","aria-label","onClick","id","length","to","bases","perLevel","Box","dangerouslySetInnerHTML","__html","masonryBreakpoints","default","1500","900","CategoryButton","this","props","categoryId","category","selected","Button","button","Component","margin","Search","state","textField","createRef","onUpdate","current","value","evt","preventDefault","blur","emit","update","setState","setTimeout","clear","onSubmit","bind","TextField","label","fullWidth","onChange","inputRef","LogoImage","data-name","xmlns","viewBox","d","x","y","width","height","rx","style","fill","strokeMiterlimit","strokeWidth","logoSVG","text","secondary","stroke","m","setIdFilter","ids","type","payload","Home","selectedCollection","idInURL","params","skillId","filterById","fetchData","collectionId","filterByCollection","skills","actionsArea","xl","lg","sm","clearFilters","onTextSearch","clearTextSearch","c","i","key","onSelectCollection","selectedCategories","has","onToggleCategory","skillsArea","breakpointCols","masonryContainer","columnClassName","masonryColumn","tag","masonryItem","reduce","skillCollections","push","toggleUserSkill","welcomeText","connect","data","filters","dispatch","fetch","then","response","json","updateTextFilter","toggleSkillInUserCollection","textAlign","logoText","overflowWrap","wordWrap","wordBreak","hyphens","overflow","breakpoints","up","maxHeight","justifyContent","marginBottom","withRouter","App","path","saveUserCollections","localStorage","setItem","JSON","stringify","initialState","Set","parse","getItem","loadUserCollections","store","createStore","action","newState","delete","add","collection","size","filter","includes","textFilter","toLowerCase","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.460d2e54.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const SkillpendiumTheme = createMuiTheme({\n  palette: {}\n});","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, withStyles, Grid, IconButton } from '@material-ui/core';\nimport { SkillStyles } from './SkillStyles';\nimport LinkIcon from '@material-ui/icons/Link';\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\nimport RemoveCircleOutlineRoundedIcon from '@material-ui/icons/RemoveCircleOutlineRounded';\nimport { Link } from 'react-router-dom';\n\nconst Skill = ({ skill, categories, classes, className, onSelect, userCollections, onToggleCollection }) => {\n  const categoriesString = skill.categories\n                            .map(s => categories[s])\n                            .join(', ');\n\n  return (\n    <Card className={className} variant=\"outlined\">\n      <CardContent>\n        <Grid container>\n          <Grid item className={classes.skillActions}>\n            <Typography variant=\"h5\" component=\"h2\">\n              {skill.name}\n            </Typography>\n          </Grid>\n          <Grid \n            item \n          >\n            <IconButton \n              aria-label=\"add to My Skills\" \n              component=\"a\" \n              className={classes.permalink}\n              onClick={() => onToggleCollection ? onToggleCollection(0, skill.id) : null}\n            >\n              {(userCollections && userCollections.length) ?\n                <RemoveCircleOutlineRoundedIcon color=\"secondary\"/> : <AddCircleOutlineRoundedIcon/>\n              }\n              \n            </IconButton>\n            <Link \n              to={'/' + skill.id} \n              onClick={(onSelect ? () => onSelect(skill.id) : null)}\n              className={classes.permalink}\n            >\n              <LinkIcon/>\n            </Link>\n          </Grid>\n        </Grid>\n\n        <Typography color=\"textSecondary\">\n          {categoriesString}\n        </Typography>\n        {skill.bases ? (\n          <Typography color=\"textSecondary\">\n            {skill.bases.join('% / ')}% + {skill.perLevel}% a level\n          </Typography>\n          ) : (\n            ''\n        )}\n        <Box className={classes.description} dangerouslySetInnerHTML={{__html:skill.description}}/>\n        \n      </CardContent>\n    </Card>\n  );\n};\n\nexport default withStyles(SkillStyles)(Skill);","export const SkillStyles = (theme) => ({\n  permalink: {\n    verticalAlign: 'baseline',\n    color: 'inherit',\n    padding: '2px 5px'\n  },\n  skillActions: {\n    flex: 1\n  },\n  description: {\n    marginTop: '1em',\n    lineHeight: '1.5em',\n    letterSpacing: 1,\n    \"& b\": {\n      display: 'block',\n      marginTop: '1em'\n    }\n  }\n});","export const AppStyles = (theme) => ({\n  actionsArea: {\n    textAlign: 'center'\n  },\n  logoText: {\n    overflowWrap: 'break-word',\n    wordWrap: 'break-word',\n    wordBreak: 'break-all',\n    hyphens: 'auto'\n  },\n  welcomeText: {\n    margin: '2em',\n    textAlign: 'center'\n  },\n  skillsArea: {\n    overflow: 'auto',\n    [theme.breakpoints.up('lg')]: {\n      maxHeight: '100vh' \n    }\n  },\n  masonryContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    width: 'auto',\n    margin: '0.5em',\n  },\n  masonryColumn: {\n    padding: '0 0.5em'\n  },\n  masonryItem: {\n    marginBottom: '1em'\n  }\n});\n\nexport const masonryBreakpoints = {\n  default: 3,\n  1500: 2,\n  900: 1\n};","import React, { Component } from 'react';\nimport { Button, withStyles } from '@material-ui/core';\nimport { CategoryButtonStyles } from './CategoryButtonStyles';\n\nclass CategoryButton extends Component {\n  onClick() {\n    const { categoryId, onClick } = this.props;\n\n    if(onClick) onClick(categoryId);\n  }\n\n  render() {\n    const { category, selected, classes } = this.props;\n\n    return (\n      <Button className={classes.button} variant={selected ? 'contained' : 'outlined'} onClick={() => this.onClick()}>{category}</Button>\n    );\n  }\n}\n\nexport default withStyles(CategoryButtonStyles)(CategoryButton);","export const CategoryButtonStyles = (theme) => ({\n  button: {\n    display: 'inline-block',\n    margin: '0.5em'\n  }\n});","import React, { Component, createRef } from 'react';\nimport { TextField } from '@material-ui/core';\n\nclass Search extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.textField = createRef();\n  }\n\n  emit() {\n    if(this.props.onUpdate) {\n      this.props.onUpdate(this.textField.current.value);\n    }\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault();\n\n    this.textField.current.blur();\n    this.emit();\n  }\n\n  onChange(evt) {\n    if(!this.state.update) {\n      this.setState({\n        update: setTimeout(() => { \n          this.emit();\n          this.setState({ update:null });\n        }, 1000)\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if(this.props.clear && this.textField.current) {\n      this.textField.current.value = '';\n    }\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.onSubmit.bind(this)}\n      >\n        <TextField\n          id=\"outlined-required\"\n          label=\"Find a Skill\"\n          variant=\"outlined\"\n          fullWidth\n          onChange={this.onChange.bind(this)}\n          inputRef={this.textField}\n        />\n      </form>\n    );\n  }\n}\n\nexport default Search;","import React from 'react';\n\nconst LogoImage = ({ className }) => {\n  return (\n    <svg \n      id=\"Layer_1\" \n      data-name=\"Layer 1\" \n      xmlns=\"http://www.w3.org/2000/svg\" \n      viewBox=\"0 0 1298 175.55\"\n      className={className}\n    >\n      <path d=\"M36.94,111a33.77,33.77,0,0,0,2.89,11.86,30.07,30.07,0,0,0,6.61,9.37,29.33,29.33,0,0,0,9.79,6.17,33.82,33.82,0,0,0,12.39,2.2,48.48,48.48,0,0,0,11.56-1.34A29.23,29.23,0,0,0,89.94,135a21.15,21.15,0,0,0,6.73-7.5,23.17,23.17,0,0,0,2.5-11.18,15.06,15.06,0,0,0-2.72-9.11,24.41,24.41,0,0,0-7.16-6.47A53.33,53.33,0,0,0,79.19,96q-5.66-2-11.44-3.71-4.83-1.38-9.7-3a95.37,95.37,0,0,1-9.41-3.71,56.8,56.8,0,0,1-8.46-4.75,30.8,30.8,0,0,1-6.82-6.3,28.83,28.83,0,0,1-4.57-8.24A30.85,30.85,0,0,1,27.1,55.65,28.7,28.7,0,0,1,30,42.4a27,27,0,0,1,8.24-9.62A38.54,38.54,0,0,1,51,26.87a61,61,0,0,1,16.18-2,56.35,56.35,0,0,1,13.9,1.55,40.36,40.36,0,0,1,10.53,4.23,31,31,0,0,1,7.59,6.26,36.42,36.42,0,0,1,5.09,7.55,35.91,35.91,0,0,1,2.94,8.2,54.55,54.55,0,0,1,1.21,8.11h-13a27.48,27.48,0,0,0-2.93-10.61,25,25,0,0,0-6.17-7.68,25.24,25.24,0,0,0-8.68-4.66,34.34,34.34,0,0,0-10.44-1.56,47.92,47.92,0,0,0-10,1,28.59,28.59,0,0,0-8.72,3.32,18.57,18.57,0,0,0-6.21,6,16.47,16.47,0,0,0-2.37,9.06A16,16,0,0,0,42.55,65a23.69,23.69,0,0,0,7.17,6.6A51.62,51.62,0,0,0,60,76.37q5.77,2,11.91,3.88l9.71,3.15a85.59,85.59,0,0,1,9.32,3.67,58.28,58.28,0,0,1,8.28,4.7,31.85,31.85,0,0,1,6.69,6.13,26.69,26.69,0,0,1,4.45,8,31.34,31.34,0,0,1,1.6,10.4,35.12,35.12,0,0,1-3.24,15.49,31.15,31.15,0,0,1-9,11.18A40.32,40.32,0,0,1,86,149.77a62.35,62.35,0,0,1-17.35,2.29,48.25,48.25,0,0,1-16.49-2.89A45.93,45.93,0,0,1,37.85,141a41,41,0,0,1-10.1-12.9A39.79,39.79,0,0,1,23.65,111Z\"/>\n      <path d=\"M152.42,28.21V89.74l61.37-61.53h16.83L183.06,75.5l50.5,73.11H217.33L174.17,84.74l-21.75,21.4v42.47H139.65V28.21Z\"/>\n      <path d=\"M274.12,28.21v120.4H261.26V28.21Z\"/>\n      <path d=\"M323.4,28.21V137h60.51v11.65H310.63V28.21Z\"/>\n      <path d=\"M423.44,28.21V137h60.5v11.65H410.66V28.21Z\"/>\n      <path d=\"M510.7,28.21h45.57a37.14,37.14,0,0,1,15.53,3.06,35.34,35.34,0,0,1,11.31,7.94,34.42,34.42,0,0,1,9.32,23.26,35.54,35.54,0,0,1-2.37,12.77,32.78,32.78,0,0,1-7,11.05,34.52,34.52,0,0,1-11.35,7.77A38.29,38.29,0,0,1,556.27,97h-32.8v51.62H510.7Zm12.77,57.48h32.8a22.3,22.3,0,0,0,8.89-1.82,23.68,23.68,0,0,0,7.46-5,24.36,24.36,0,0,0,5.14-7.42,23.22,23.22,0,0,0,.13-18.09A21.73,21.73,0,0,0,573,46.24a22.62,22.62,0,0,0-7.42-4.7,25.18,25.18,0,0,0-9.28-1.68h-32.8Z\"/>\n      <path d=\"M700.41,28.21V39.86h-67.5V80.6h63.53V92.25H632.91V137h70.52v11.65H620.14V28.21Z\"/>\n      <path d=\"M750.55,28.21l61.28,104.08V28.21H824.6v120.4H807.52l-61.28-104v104H733.46V28.21Z\"/>\n      <path d=\"M859.13,28.21h44.62a50.23,50.23,0,0,1,14.89,2.15,47.1,47.1,0,0,1,12.69,6.09A49.37,49.37,0,0,1,941.6,45.9a57.82,57.82,0,0,1,7.64,12.17A66.51,66.51,0,0,1,954,72.35a74.79,74.79,0,0,1,1.64,15.84,72.76,72.76,0,0,1-3.79,23.87,60,60,0,0,1-10.66,19.16A49.51,49.51,0,0,1,924.77,144a47.59,47.59,0,0,1-21,4.62H859.13ZM871.9,137h26.76a46.68,46.68,0,0,0,17.61-3.28,39.74,39.74,0,0,0,14-9.5A43.76,43.76,0,0,0,939.53,109a59.16,59.16,0,0,0,3.32-20.5,63,63,0,0,0-3.37-21.71,40.86,40.86,0,0,0-9.32-15.14,37.32,37.32,0,0,0-14-8.85,51.45,51.45,0,0,0-17.48-2.89H871.9Z\"/>\n      <path d=\"M997.66,28.21v120.4H984.79V28.21Z\"/>\n      <path d=\"M1046.94,28.21v81.13a30.67,30.67,0,0,0,2.72,13.16,31.56,31.56,0,0,0,7.07,9.88,31,31,0,0,0,9.84,6.22,30.25,30.25,0,0,0,11.1,2.15,37,37,0,0,0,11.78-2,33.07,33.07,0,0,0,10.61-5.87,30.19,30.19,0,0,0,7.68-9.71,29.23,29.23,0,0,0,3-13.51V28.21h12.69v80.61a40.8,40.8,0,0,1-4.06,18.6A42.2,42.2,0,0,1,1108.78,141a46.55,46.55,0,0,1-14.67,8.33,49.32,49.32,0,0,1-16.36,2.85,45.51,45.51,0,0,1-15.54-2.81,43.68,43.68,0,0,1-14-8.28,41.74,41.74,0,0,1-10.14-13.64,43.6,43.6,0,0,1-3.88-19V28.21Z\"/>\n      <path d=\"M1174.59,28.21l38.32,102.7,38.93-102.7h16.57v120.4h-12.77V50l-36.17,98.65h-11.65L1170.88,50v98.65h-12.77V28.21Z\"/>\n      <rect \n        x=\"5\"\n        y=\"5\"\n        width=\"1288\"\n        height=\"165.55\"\n        rx=\"18.19\" \n        style={{\n          fill: 'none',\n          strokeMiterlimit: 10,\n          strokeWidth: 10\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default LogoImage;\n\n","import React from 'react';\nimport { Box, withStyles } from '@material-ui/core';\nimport { LogoStyles } from './LogoStyles';\nimport LogoImage from './LogoImage';\n\n\nconst Logo = ({ classes }) => {\n  return (\n    <Box m={3}>\n      <LogoImage className={classes.logoSVG}/>\n    </Box>\n  );\n};\n\nexport default withStyles(LogoStyles)(Logo);","export const LogoStyles = (theme) => ({\n  logoSVG: {\n    fill: theme.palette.text.secondary,\n    '& rect': {\n      stroke: theme.palette.text.secondary\n    }\n  }\n});","export const LOAD_DATA = 'RECEIVE_POSTS';\nfunction dataLoaded(data) {\n  return {\n    type: LOAD_DATA,\n    payload: data\n  };\n}\n\nexport function fetchData() {\n  return dispatch => {\n    return fetch('/data.json')\n      .then(response => response.json())\n      .then(json => dispatch(dataLoaded(json)));\n  };\n};\n\nexport const TOGGLE_CATEGORY_FILTER = 'TOGGLE_CATEGORY_FILTER';\nexport function toggleCategoryFilter(categoryId) {\n  return {\n    type: TOGGLE_CATEGORY_FILTER,\n    payload: categoryId\n  };\n};\n\nexport const UPDATE_TEXT_FILTER = 'UPDATE_TEXT_FILTER';\nexport function updateTextFilter(text) {\n  return {\n    type: UPDATE_TEXT_FILTER,\n    payload: text\n  };\n};\n\nexport const SET_ID_FILTER = 'SET_ID_FILTER';\nexport function setIdFilter(ids) {\n  return {\n    type: SET_ID_FILTER,\n    payload: ids\n  };\n};\n\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport function clearFilters() {\n  return {\n    type: CLEAR_FILTERS\n  };\n};\n\nexport const TOGGLE_SKILL_IN_COLLECTION = 'TOGGLE_SKILL_IN_COLLECTION';\nexport function toggleSkillInUserCollection(collectionId, skillId) {\n  return {\n    type: TOGGLE_SKILL_IN_COLLECTION,\n    payload: {\n      collectionId,\n      skillId\n    }\n  };\n};","import React, { Component } from 'react';\nimport Skill from '../components/Skill/Skill';\nimport { Grid, withStyles, Box, Typography } from '@material-ui/core';\nimport { AppStyles, masonryBreakpoints } from '../AppStyles';\nimport Masonry from 'react-masonry-css';\nimport CategoryButton from '../components/CategoryButton/CategoryButton';\nimport Search from '../components/Search/Search';\nimport Logo from '../components/Logo/Logo';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchData, toggleCategoryFilter, updateTextFilter, setIdFilter, clearFilters, toggleSkillInUserCollection } from '../actions';\n\nclass Home extends Component {\n  state = {\n    selectedCollection: null\n  }\n\n  componentDidMount() {\n    const idInURL = this.props.match.params.skillId;\n\n    if(idInURL) {\n      this.props.filterById(idInURL);\n    }\n    \n    this.props.fetchData();\n  }\n\n  onSelectCollection(collectionId, ids) {\n    if(this.state.selectedCollection === collectionId) {\n      this.props.filterByCollection([]);\n      this.setState({ selectedCollection:null });\n    } else {\n      this.props.filterByCollection([...ids]);\n      this.setState({ selectedCollection:collectionId });\n    }\n  }\n\n  render() {\n    const { categories, skills, classes, userCollections } = this.props;\n\n    return (\n      <Grid \n        container\n      >\n        <Grid \n          item\n          className={classes.actionsArea}\n          xl={4}\n          lg={5}\n          sm={12}\n        >\n          <Link \n            to=\"/\"\n            onClick={this.props.clearFilters}\n          >\n            <Logo/>\n          </Link>\n          <Box m={2}>\n            <Search \n              onUpdate={this.props.onTextSearch}\n              clear={this.props.clearTextSearch}\n            />\n          </Box>\n          <Box>\n            {userCollections.map((c, i) => (\n              <CategoryButton \n                key={i}\n                category={c.name}\n                categoryId={i}\n                selected={this.state.selectedCollection === i}\n                onClick={() => this.onSelectCollection(i, c.ids)}\n              />\n            ))\n\n            }\n            {categories.map((c, i) => (\n              <CategoryButton \n                key={i}\n                category={c}\n                categoryId={i}\n                selected={this.props.selectedCategories.has(i)}\n                onClick={this.props.onToggleCategory}\n              />\n            ))}\n          </Box>\n        </Grid>\n        <Grid \n          item \n          className={classes.skillsArea} \n          xl={8}\n          lg={7}\n          sm={12}\n        >\n          {skills.length ? (\n              <Masonry\n                breakpointCols={masonryBreakpoints}\n                className={classes.masonryContainer}\n                columnClassName={classes.masonryColumn}\n              >\n                {skills.map(s => (\n                  <Skill \n                    key={s.tag} \n                    className={classes.masonryItem}\n                    skill={s}\n                    categories={categories}\n                    onSelect={this.props.filterById}\n                    userCollections={\n                      userCollections.reduce((skillCollections, c, i) => {\n                        if(c.ids.has(s.id)) skillCollections.push(i);\n                        return skillCollections;\n                      }, [])\n                    }\n                    onToggleCollection={this.props.toggleUserSkill}\n                  />\n                ))}\n              </Masonry>\n            ) : (\n              <Typography variant=\"h6\" className={classes.welcomeText}>To get started select some categories or enter a search.</Typography>\n            )}\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.data.categories,\n    selectedCategories: state.filters.categories,\n    clearTextSearch: state.clearTextSearch,\n    skills: state.skills,\n    userCollections: state.userCollections\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => dispatch(fetchData()),\n    onToggleCategory: id => dispatch(toggleCategoryFilter(id)),\n    onTextSearch: text => dispatch(updateTextFilter(text)),\n    filterById: id => dispatch(setIdFilter([id])),\n    filterByCollection: ids => dispatch(setIdFilter(ids)),\n    clearFilters: () => dispatch(clearFilters()),\n    toggleUserSkill: (collectionId, skillId) => dispatch(toggleSkillInUserCollection(collectionId, skillId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(AppStyles)(withRouter(Home)));\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from \"./pages/Home\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={['/:skillId', '/']}>\n          <Home />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\n","import { LOAD_DATA, TOGGLE_CATEGORY_FILTER, UPDATE_TEXT_FILTER, SET_ID_FILTER, CLEAR_FILTERS, TOGGLE_SKILL_IN_COLLECTION } from \"./actions\";\n\nfunction loadUserCollections() {\n  let userCollections = JSON.parse(localStorage.getItem('collections'));\n\n  if(!userCollections) {\n    return [{\n      name: 'My Skills',\n      ids: new Set()\n    }];\n  }\n\n  userCollections = userCollections.map(c => ({\n    ...c,\n    ids: new Set(c.ids)\n  }));\n\n  return userCollections;\n}\n\nfunction saveUserCollections(userCollections) {\n  localStorage.setItem('collections', JSON.stringify(userCollections.map(c => ({\n    ...c,\n    ids: [...c.ids]\n  }))));\n}\n\nconst initialState = {\n  data: {\n    categories: [],\n    skills: []\n  },\n  skills: [],\n  clearTextSearch: false,\n  filters: {\n    categories: new Set(),\n    text: '',\n    ids: []\n  },\n  userCollections: loadUserCollections()\n};\n\nexport default (state = initialState, action) => {\n  let newState = {\n    ...state,\n    skills: [],\n    clearTextSearch: false\n  };\n\n  let filters = { \n    categories: new Set(state.filters.categories),\n    text: state.filters.text,\n    ids: [...state.filters.ids]\n  };\n\n  switch(action.type) {\n    case LOAD_DATA:\n      newState.data = action.payload;\n      break;\n    case TOGGLE_CATEGORY_FILTER:\n      const categoryId = action.payload;\n\n      if(filters.categories.has(categoryId)) {\n        filters.categories.delete(categoryId);\n      } else {\n        filters.categories.add(categoryId);\n      }\n      break;\n    case UPDATE_TEXT_FILTER:\n      filters.text = action.payload;\n      break;\n    case SET_ID_FILTER:\n      newState.clearTextSearch = true;\n      filters = {\n        categories: new Set(),\n        text: '',\n        ids: action.payload\n      }\n\n      break;\n    case CLEAR_FILTERS:\n      newState.clearTextSearch = true;\n      filters = {\n        categories: new Set(),\n        text: '',\n        ids: []\n      };\n\n      break;\n    case TOGGLE_SKILL_IN_COLLECTION:\n      let collection = newState.userCollections[action.payload.collectionId];\n\n      if(collection) {\n        const skillId = action.payload.skillId;\n\n        if(collection.ids.has(skillId)) {\n          collection.ids.delete(skillId);\n        } else {\n          collection.ids.add(skillId);\n        }\n        \n        saveUserCollections(newState.userCollections);\n      }\n\n      break;\n    default:\n      break;\n  }\n\n  if(filters.ids.length || filters.categories.size || filters.text) {\n\n    let skills = [...newState.data.skills];\n\n    if(filters.ids.length) {\n      skills = skills.filter(s => filters.ids.includes(s.id));\n    }\n\n    if(filters.categories.size) {\n      skills = skills.filter(s => {\n        return !!s.categories\n          .filter(c => {\n            return filters.categories.has(c)\n          }).length;\n      });\n    }\n\n    if(filters.text) {\n      const textFilter = filters.text;\n\n      skills = skills.filter(s => {\n        return s.name.toLowerCase().includes(textFilter) \n          || s.description.toLowerCase().includes(textFilter);\n      });\n    }\n\n    newState.skills = skills;\n  }\n\n  newState.filters = filters;\n\n  return newState;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { SkillpendiumTheme } from './muiTheme';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n        <ThemeProvider theme={SkillpendiumTheme}>\n          <CssBaseline/>\n          <App />\n        </ThemeProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}